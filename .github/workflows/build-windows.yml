name: Build Windows Executable

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Set UTF-8 encoding
      run: |
        $env:PYTHONUTF8 = "1"
        echo "PYTHONUTF8=1" >> $env:GITHUB_ENV
        
    - name: Download FFmpeg (Minimal)
      run: |
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        (New-Object System.Net.WebClient).DownloadFile(
            "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip",
            "ffmpeg.zip"
        )
        Expand-Archive "ffmpeg.zip" "temp"
        $bin = Get-ChildItem "temp" -Recurse -Directory -Name "bin"
        New-Item -Force -Type Directory "ffmpeg\bin"
        Copy-Item "temp\*\bin\*" "ffmpeg\bin\" -Force
        Write-Host "FFmpeg ready: $($(Get-ChildItem 'ffmpeg\bin\*.exe').Count) executables"
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Verify dependencies
      run: |
        python -c "import customtkinter; print('CustomTkinter version:', customtkinter.__version__)"
        python -c "import openai; print('OpenAI version:', openai.__version__)"
        python -c "import pydub; print('Pydub imported successfully')"
        
    - name: Build executable with PyInstaller
      run: |
        pyinstaller AudioTranscriber.spec
        
    - name: Verify build
      run: |
        if (Test-Path "dist/AudioTranscriber.exe") {
          $size = (Get-Item "dist/AudioTranscriber.exe").Length / 1MB
          Write-Host "[SUCCESS] Build completed!"
          Write-Host "[INFO] Executable: dist/AudioTranscriber.exe"
          Write-Host "[INFO] File size: $([math]::Round($size, 1)) MB"
        } else {
          Write-Host "[ERROR] Build failed - executable not found"
          exit 1
        }
        
    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: AudioTranscriber-Windows
        path: dist/AudioTranscriber.exe
        retention-days: 30

    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/AudioTranscriber.exe
        name: Audio Transcriber ${{ github.ref_name }}
        body: |
          ## Audio Transcriber ${{ github.ref_name }}
          
          Windows executable for the Audio Transcriber application.
          
          ### Features:
          - OpenAI API key input and saving
          - Automatic audio compression and splitting for large files
          - Support for files over 25MB and 23 minutes
          - Custom filename and output directory
          - Copy transcription to clipboard
          
          ### Requirements:
          - Windows 10 or later
          - OpenAI API key
          
          ### Usage:
          1. Download AudioTranscriber.exe
          2. Run the application
          3. Enter your OpenAI API key (saved automatically)
          4. Select audio file and transcribe!
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
